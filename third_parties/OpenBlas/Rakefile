require "rake"
require "../common.rb"

task :default => [:install]

VER     = '0.3.3'
VER_WIN = '0.2.15'

desc "download OpenBlas libs"
task :download do
  filename = "OpenBLAS.tar.gz"
  url_addr = "https://sourceforge.net/projects/openblas/files/v#{VER}/OpenBLAS%20#{VER}%20version.tar.gz/download"
  url_download( url_addr, filename )
end

task :download_win do
  filename = "OpenBLAS-v#{VER_WIN}-Win32.zip"
  url_addr = "https://sourceforge.net/projects/openblas/files/v#{VER_WIN}/OpenBLAS-v#{VER_WIN}-Win32.zip/download"
  url_download( url_addr, filename )
  filename = "OpenBLAS-v#{VER_WIN}-Win64-int32.zip"
  url_addr = "https://sourceforge.net/projects/openblas/files/v#{VER_WIN}/OpenBLAS-v#{VER_WIN}-Win64-int32.zip/download"
  url_download( url_addr, filename )
end

desc "untar OpenBLAS files"
task :unzip => [:download_win] do
  zip_archive = "OpenBLAS-v#{VER_WIN}-Win32.zip"
  extract_zip( zip_archive )
  zip_archive = "OpenBLAS-v#{VER_WIN}-Win64-int32.zip"
  extract_zip( zip_archive )
end

desc "untar OpenBLAS.tar.gz file"
task :targz => [:download] do
  tar_gz_archive = "OpenBLAS.tar.gz"
  if File.directory?('eigen3')
    puts "directory: eigen3 found, file `#{tar_gz_archive}` not processed"    
  else
    extract_tgz( tar_gz_archive, '.' )
    FileUtils.rm_rf 'OpenBLAS'
    Dir['*-OpenBLAS-*'].each{ |f| FileUtils.mv f, 'OpenBLAS' }    
  end
end

desc "build OpenBLAS file"
task :build => [:targz] do
  lib = 'libs/lib/libopenblas'
  if File.exists?(lib+'.dylib') or
     File.exists?(lib+'.so') then
     puts "OpenBLAS already compiled"
  else
    FileUtils.cd "OpenBlas"
    sh "make ; make install PREFIX=../libs"
    FileUtils.cd ".."

    FileUtils.cd "libs/lib"

    def unix_command?(name)
      `which #{name}`
      $?.success?
    end

    if File.exists?(lib+'.dylib') then
      l = lib+'.dylib'
      sh "install_name_tool -id @rpath/#{l} #{l}"
    end 

    if File.exists?(lib+'.so') then
      l = lib+'.so'
      if unix_command?("patchelf") then
        sh "patchelf --set-rpath @rpath/#{l} #{l}"
      elsif unix_command?("chrpath") then
        sh "chrpath --replace @rpath/#{l} #{l}"
      end
    end 

    FileUtils.cd "../.."

  end
end

desc "install OpenBLAS libs"
task :install => [:build] do
  prefix = "../../lib3rd"
  puts "OpenBLAS copy files to #{prefix}"

  FileUtils.rm_rf   "#{prefix}/include/openblas"
  FileUtils.mkdir_p "#{prefix}/include/openblas"
  FileUtils.mkdir_p "#{prefix}/lib"

  FileUtils.cp_r "libs/include", "#{prefix}/include/openblas"
  FileUtils.cp_r "libs/lib",     "#{prefix}/lib"
end

def ChangeOnFile( file, text_to_replace, text_to_put_in_place )
  text= File.read file
  File.open(file, 'w+'){|f| f << text.gsub(text_to_replace, text_to_put_in_place)}
end

desc "install OpenBLAS libs"
task :install_win do
  prefix = "../../lib3rd"
  puts "OpenBLAS copy files to #{prefix}"

  FileUtils.rm_rf   "#{prefix}/include/openblas/x86/"
  FileUtils.rm_rf   "#{prefix}/include/openblas/x64/"

  FileUtils.mkdir_p "#{prefix}/include/openblas/x86/"
  FileUtils.mkdir_p "#{prefix}/include/openblas/x64/"

  FileUtils.mkdir_p "#{prefix}/lib/x86"
  FileUtils.mkdir_p "#{prefix}/lib/x64"
  FileUtils.mkdir_p "#{prefix}/lib/x86_debug"
  FileUtils.mkdir_p "#{prefix}/lib/x64_debug"
  
  # remove _Complex for Visual Studio (not supported)
  #ChangeOnFile( dir64+'include/openblas_config.h','_MSC_VER >= 1800', '1 >= 1800')
  #ChangeOnFile( dir32+'include/openblas_config.h','_MSC_VER >= 1800', '1 >= 1800')

  FileUtils.cp 'win32_debug/lib/openblas.lib',   prefix+'/lib/x86_debug/openblas.lib'
  FileUtils.cp 'win32_debug/bin/openblas.dll',   prefix+'/lib/x86_debug/openblas.dll'
  FileUtils.cp 'win32_release/lib/openblas.lib', prefix+'/lib/x86/openblas.lib'
  FileUtils.cp 'win32_release/bin/openblas.dll', prefix+'/lib/x86/openblas.dll'

  FileUtils.cp 'win64_debug/lib/openblas.lib',   prefix+'/lib/x64_debug/openblas.lib'
  FileUtils.cp 'win64_debug/bin/openblas.dll',   prefix+'/lib/x64_debug/openblas.dll'
  FileUtils.cp 'win64_release/lib/openblas.lib', prefix+'/lib/x64/openblas.lib'
  FileUtils.cp 'win64_release/bin/openblas.dll', prefix+'/lib/x64/openblas.dll'

  Dir['win32_release/include/*'].each{ |f| FileUtils.cp(f,prefix+'/include/openblas/x86/'+File.basename(f)) }
  Dir['win64_release/include/*'].each{ |f| FileUtils.cp(f,prefix+'/include/openblas/x64/'+File.basename(f)) }

end
